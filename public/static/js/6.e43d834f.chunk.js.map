{"version":3,"sources":["components/useIsMountedRef.js","managementView/CalendarView/Toolbar.js","managementView/CalendarView/AddEditEventModal/AddEditEventForm.js","managementView/CalendarView/AddEditEventModal/index.js","managementView/CalendarView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","monthGrid","breakpoints","up","flex","Toolbar","date","onDatePrev","view","onDateNext","onDateToday","onEventAdd","onViewChange","className","rest","classes","Grid","clsx","alignItems","container","justify","spacing","item","ButtonGroup","size","Button","onClick","Typography","variant","color","moment","format","display","justifyContent","messageWidth","maxWidth","AddEditEventForm","event","mode","onCancel","onAdd","onDelete","onEdit","console","log","Box","p","align","gutterBottom","name","email","mt","subject","message","title","start","Divider","flexGrow","disableElevation","defaultProps","AddEditEventModal","open","Dialog","fullWidth","onClose","backgroundColor","palette","background","dark","paddingTop","paddingBottom","calendar","borderColor","divider","colors","blue","default","typography","body2","body1","h6","subtitle2","fontWeight","fontWeightMedium","text","secondary","padding","primary","main","contrastText","borderWidth","opacity","subtitle1","CalendarView","calendarRef","isMountedRef","useTheme","useState","setView","toDate","setDate","events","setEvents","modal","setModal","getEvents","useCallback","arr","axios","get","then","response","data","map","info","st","time","push","id","service","resetModal","Page","Container","calendarEl","calendarApi","getApi","next","getDate","prev","today","newView","changeView","Paper","component","allDayMaintainDuration","defaultDate","defaultView","droppable","editable","eventClick","arg","find","e","parseInt","eventDrop","prevEvents","prevEvent","allDay","end","eventLimit","eventResizableFromStart","eventResize","timeFormat","header","height","ref","rerenderDelay","selectable","weekends","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","timelinePlugin","eventId","filter"],"mappings":"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","file":"static/js/6.e43d834f.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport {\n  Button,\n  ButtonGroup,\n  Grid,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  monthGrid: {\n    [theme.breakpoints.up(\"md\")]: {\n      flex: \"0 0 55%\",\n    },\n  },\n}));\n\nfunction Toolbar({\n  date,\n  view,\n  onDatePrev,\n  onDateNext,\n  onEventAdd,\n  onViewChange,\n  onDateToday,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      {...rest}\n      alignItems=\"center\"\n      container\n      justify=\"space-between\"\n      spacing={3}\n    >\n      <Grid item>\n        <ButtonGroup size=\"small\">\n          <Button onClick={onDatePrev}>Prev</Button>\n          <Button onClick={onDateToday}>Today</Button>\n          <Button onClick={onDateNext}>Next</Button>\n        </ButtonGroup>\n      </Grid>\n\n      <Grid item className={classes.monthGrid}>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          {moment(date).format(\"MMMM YYYY\")}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired,\n};\n\nexport default Toolbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Typography,\n  Button,\n  Divider,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  container: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"baseline\",\n  },\n  messageWidth: {\n    maxWidth: 280,\n  },\n}));\n\nfunction AddEditEventForm({ event, mode, onAdd, onCancel, onDelete, onEdit }) {\n  const classes = useStyles();\n  console.log(event);\n\n  return (\n    <div>\n      <Box p={3}>\n        <Typography\n          align=\"center\"\n          gutterBottom\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          {mode === \"add\" ? \"Add Event\" : \"Event Info\"}\n        </Typography>\n      </Box>\n      <Box p={3} className={classes.container}>\n        <Box>\n          <Typography variant=\"h4\">{event.name}</Typography>\n          <Box>\n            <Typography variant=\"body2\">{event.email}</Typography>\n          </Box>\n          <Box mt={2}>\n            <Typography variant=\"h6\">Subject</Typography>\n          </Box>\n          <Box>\n            <Typography variant=\"body2\">{event.subject}</Typography>\n          </Box>\n          <Box mt={2}>\n            <Typography variant=\"h6\">Message</Typography>\n          </Box>\n          <Box>\n            <Typography variant=\"body2\" className={classes.messageWidth}>\n              {event.message}\n            </Typography>\n          </Box>\n        </Box>\n        <Box>\n          <Box mt={2}>\n            <Typography variant=\"h5\">{event.title}</Typography>\n          </Box>\n          <Box>\n            <Typography variant=\"body1\">\n              {moment(event.date, \"YYYY-MM-DD\").format(\"dddd MMM Do, YYYY\")}\n            </Typography>\n          </Box>\n          <Box>\n            <Typography variant=\"body1\">\n              {moment(event.start).format(\"hh:mm a\")}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n\n      <Divider />\n      <Box p={2} display=\"flex\" alignItems=\"center\">\n        <Box flexGrow={1} />\n        <Button\n          onClick={onCancel}\n          color=\"primary\"\n          variant=\"contained\"\n          disableElevation\n        >\n          Close\n        </Button>\n      </Box>\n    </div>\n  );\n}\n\nAddEditEventForm.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf([\"add\", \"edit\"]).isRequired,\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n};\n\nAddEditEventForm.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {},\n};\n\nexport default AddEditEventForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dialog } from '@material-ui/core';\nimport AddEditEventForm from './AddEditEventForm';\n\nfunction AddEditEventModal({\n  event,\n  mode,\n  onAdd,\n  onCancel,\n  onDelete,\n  onEdit,\n  open,\n  ...rest\n}) {\n  return (\n    <Dialog\n      maxWidth=\"sm\"\n      fullWidth\n      onClose={onCancel}\n      open={open}\n      {...rest}\n    >\n      {/* Dialog renders its body even if not open */}\n      {open && (\n        <AddEditEventForm\n          event={event}\n          mode={mode}\n          onAdd={onAdd}\n          onCancel={onCancel}\n          onDelete={onDelete}\n          onEdit={onEdit}\n        />\n      )}\n    </Dialog>\n  );\n}\n\nAddEditEventModal.propTypes = {\n  event: PropTypes.object,\n  mode: PropTypes.oneOf(['add', 'edit']),\n  onAdd: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n  open: PropTypes.bool\n};\n\nAddEditEventModal.defaultProps = {\n  event: {},\n  onAdd: () => {},\n  onCancel: () => {},\n  onDelete: () => {},\n  onEdit: () => {},\n  open: false\n};\n\nexport default AddEditEventModal;\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport moment from \"moment\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport listPlugin from \"@fullcalendar/list\";\nimport timelinePlugin from \"@fullcalendar/timeline\";\nimport {\n  Box,\n  Container,\n  Paper,\n  useTheme,\n  makeStyles,\n  colors,\n} from \"@material-ui/core\";\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/timegrid/main.css\";\nimport \"@fullcalendar/list/main.css\";\nimport axios from \"axios\";\nimport useIsMountedRef from \"src/components/useIsMountedRef\";\nimport Page from \"src/components/Page\";\nimport Toolbar from \"./Toolbar\";\nimport AddEditEventModal from \"./AddEditEventModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    // minHeight: \"100%\",\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n  },\n  calendar: {\n    \"& .fc-unthemed th\": {\n      borderColor: theme.palette.divider,\n    },\n    \"& .fc-unthemed td\": {\n      borderColor: theme.palette.divider,\n    },\n    \"& .fc-unthemed td.fc-today\": {\n      backgroundColor: colors.blue[50],\n    },\n    \"& .fc-head\": {\n      backgroundColor: theme.palette.background.dark,\n    },\n    \"& .fc-body\": {\n      backgroundColor: theme.palette.background.default,\n    },\n    \"& .fc-axis\": {\n      ...theme.typography.body2,\n    },\n    \"& .fc-list-item-time\": {\n      ...theme.typography.body2,\n    },\n    \"& .fc-list-item-title\": {\n      ...theme.typography.body1,\n    },\n    \"& .fc-list-heading-main\": {\n      ...theme.typography.h6,\n    },\n    \"& .fc-list-heading-alt\": {\n      ...theme.typography.h6,\n    },\n    \"& .fc th\": {\n      borderColor: theme.palette.divider,\n    },\n    \"& .fc-day-header\": {\n      ...theme.typography.subtitle2,\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.text.secondary,\n      padding: theme.spacing(1),\n      backgroundColor: theme.palette.background.dark,\n    },\n    \"& .fc-day-top\": {\n      ...theme.typography.body2,\n    },\n    \"& .fc-highlight\": {\n      backgroundColor: theme.palette.background.dark,\n    },\n    \"& .fc-event\": {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.secondary.contrastText,\n      borderWidth: 2,\n      opacity: 0.9,\n      \"& .fc-time\": {\n        ...theme.typography.h6,\n        color: \"inherit\",\n      },\n      \"& .fc-title\": {\n        ...theme.typography.body1,\n        color: \"inherit\",\n      },\n    },\n    \"& .fc-list-empty\": {\n      ...theme.typography.subtitle1,\n    },\n  },\n  container: {\n    padding: theme.spacing(0, 0, 10, 0),\n  },\n}));\n\nfunction CalendarView() {\n  const classes = useStyles();\n  const calendarRef = useRef(null);\n  const isMountedRef = useIsMountedRef();\n  const theme = useTheme();\n  const [view, setView] = useState(\"dayGridMonth\");\n  const [date, setDate] = useState(moment().toDate());\n  const [events, setEvents] = useState(null);\n  const [modal, setModal] = useState({\n    event: null,\n    mode: null,\n    open: false,\n  });\n\n  const getEvents = useCallback(() => {\n    var arr = [];\n    axios.get(\"/events\").then((response) => {\n      if (isMountedRef.current) {\n        let data = response.data;\n        // '2010-01-01T14:30:00',\n        data.map((info) => {\n          let formatDay = moment(info.date, \"dddd MMM Do, YYYY\").format(\n            \"YYYY-MM-DD\"\n          );\n          let st = formatDay + \"T\" + info.time;\n          arr.push({\n            id: info.id,\n            name: info.name,\n            email: info.email,\n            message: info.message,\n            subject: info.subject,\n            date: moment(info.date, \"dddd MMM Do, YYYY\").format(\"YYYY-MM-DD\"),\n            start: st,\n            title: info.service,\n          });\n          return true;\n        });\n      }\n\n      setEvents(arr);\n    });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  const resetModal = () => {\n    setModal({\n      event: null,\n      mode: null,\n      open: false,\n    });\n  };\n\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleViewChange = (newView) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleEventDelete = (eventId) => {\n    setEvents((prevEvents) =>\n      prevEvents.filter((prevEvent) => prevEvent.id !== eventId)\n    );\n    resetModal();\n  };\n\n  const handleEventSelect = (arg) => {\n    const event = events.find((e) => e.id === parseInt(arg.event.id));\n\n    setModal({\n      event: { ...event },\n      mode: \"edit\",\n      open: true,\n    });\n  };\n\n  const handleEventEdit = (event) => {\n    setEvents((prevEvents) =>\n      prevEvents.map((prevEvent) =>\n        prevEvent.id === event.id ? event : prevEvent\n      )\n    );\n    resetModal();\n  };\n\n  const handleEventResize = ({ event }) => {\n    // Call API to update the event in database\n    setEvents((prevEvents) =>\n      prevEvents.map((prevEvent) =>\n        prevEvent.id === event.id\n          ? {\n              ...prevEvent,\n              allDay: event.allDay,\n              start: event.start,\n              end: event.end,\n            }\n          : prevEvent\n      )\n    );\n  };\n\n  const handleEventDrop = ({ event }) => {\n    // If you add a droppable area, check if event dropped inside or outside of calendar\n    // Call API to update the event in database\n    setEvents((prevEvents) =>\n      prevEvents.map((prevEvent) =>\n        prevEvent.id === event.id\n          ? {\n              ...prevEvent,\n              allDay: event.allDay,\n              start: event.start,\n              end: event.end,\n            }\n          : prevEvent\n      )\n    );\n  };\n\n  const handleModalClose = () => {\n    resetModal();\n  };\n\n  if (!events) {\n    return null;\n  }\n  return (\n    <Page className={classes.root} title=\"Calendar\">\n      <Container className={classes.container}>\n        <Toolbar\n          date={date}\n          onDateNext={handleDateNext}\n          onDatePrev={handleDatePrev}\n          onDateToday={handleDateToday}\n          onViewChange={handleViewChange}\n          view={view}\n        />\n        <Paper className={classes.calendar} component={Box} mt={3} p={2}>\n          <FullCalendar\n            allDayMaintainDuration\n            defaultDate={date}\n            defaultView={view}\n            droppable\n            editable\n            eventClick={handleEventSelect}\n            eventDrop={handleEventDrop}\n            eventLimit\n            eventResizableFromStart\n            eventResize={handleEventResize}\n            events={events}\n            timeFormat=\"h:mm\"\n            // eventRender={EventDetail}\n            header={false}\n            height={800}\n            ref={calendarRef}\n            rerenderDelay={10}\n            selectable\n            weekends\n            plugins={[\n              dayGridPlugin,\n              timeGridPlugin,\n              interactionPlugin,\n              listPlugin,\n              timelinePlugin,\n            ]}\n          />\n        </Paper>\n        <AddEditEventModal\n          event={modal.event}\n          mode={modal.mode}\n          onCancel={handleModalClose}\n          onDelete={handleEventDelete}\n          onEdit={handleEventEdit}\n          open={modal.open}\n        />\n      </Container>\n    </Page>\n  );\n}\n\nexport default CalendarView;\n"],"sourceRoot":""}