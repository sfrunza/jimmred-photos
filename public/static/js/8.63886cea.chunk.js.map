{"version":3,"sources":["components/FilesDropzone.js","components/Uploader.js","managementView/PhotosListView/Header.js","managementView/PhotosListView/Body.js","managementView/PhotosListView/Results.js","managementView/PhotosListView/index.js"],"names":["useStyles","makeStyles","theme","root","dropZone","border","palette","divider","padding","spacing","outline","display","justifyContent","flexWrap","alignItems","backgroundColor","action","hover","opacity","cursor","dragActive","active","image","width","info","marginTop","list","maxHeight","actions","marginLeft","button","buttonBox","FilesDropzone","className","setFieldValue","handleSubmit","text","rest","classes","useState","files","setFiles","handleDrop","useCallback","acceptedFiles","handleImageUpload","a","imageFile","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","Object","assign","path","console","log","handleRemoveAll","useDropzone","onDrop","getRootProps","getInputProps","clsx","Button","variant","color","Box","flexGrow","undefined","name","List","ListItem","disableGutters","ListItemIcon","ListItemText","primary","primaryTypographyProps","secondary","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","convert","size","onClick","disableElevation","card","boxShadow","breakpoints","down","flexDirection","buttonCamera","cardItem","Uploader","setImages","images","enqueueSnackbar","useSnackbar","useStateValue","dispatch","initialValues","price","likes","validationSchema","Yup","shape","onSubmit","values","setErrors","setStatus","setSubmitting","resetForm","formData","FormData","append","addPhoto","success","anchorOrigin","vertical","horizontal","err","submit","message","errors","handleChange","handleBlur","isSubmitting","touched","Grid","Card","container","item","xs","md","TextField","id","label","type","value","onChange","mt","FormHelperText","error","box","Header","justify","Typography","queryField","height","objectFit","Body","photo","setName","setPrice","useEffect","TableRow","TableCell","src","url","alt","event","target","align","IconButton","editPhoto","disabled","SvgIcon","fontSize","removePhoto","Results","page","setPage","limit","setLimit","query","setQuery","filteredPhotos","photos","filter","job","matches","toLowerCase","includes","applyFilters","paginatedPhotos","customers","slice","applyPagination","p","minHeight","InputProps","startAdornment","InputAdornment","position","persist","placeholder","minWidth","Table","TableHead","TableBody","map","TablePagination","component","count","length","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","paddingTop","paddingBottom","PhotosListView","Page","title","Container"],"mappings":"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","file":"static/js/8.63886cea.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { useState, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { useDropzone } from \"react-dropzone\";\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport imageCompression from \"browser-image-compression\";\nimport {\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\n// import bytesToSize from 'src/utils/bytesToSize';\nimport { Camera as CameraIcon } from \"react-feather\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  dropZone: {\n    border: `1px dashed ${theme.palette.divider}`,\n    padding: theme.spacing(6),\n    outline: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.action.hover,\n      opacity: 0.5,\n      cursor: \"pointer\",\n    },\n  },\n  dragActive: {\n    backgroundColor: theme.palette.action.active,\n    opacity: 0.5,\n  },\n  image: {\n    width: 130,\n  },\n  info: {\n    marginTop: theme.spacing(1),\n  },\n  list: {\n    maxHeight: 320,\n  },\n  actions: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n  button: {\n    width: \"100%\",\n    // borderColor: colors.deepPurple[\"A200\"],\n    // \"&:hover\": {\n    //   borderColor: colors.deepPurple[\"A200\"],\n    // },\n  },\n  buttonBox: {\n    width: \"100%\",\n  },\n}));\n\nfunction FilesDropzone({\n  className,\n  setFieldValue,\n  handleSubmit,\n  text,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n\n  const convert = (bytes, decimals = 2) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n  };\n\n  const handleDrop = useCallback((acceptedFiles) => {\n    handleImageUpload(acceptedFiles);\n  }, []);\n\n  async function handleImageUpload(acceptedFiles) {\n    const imageFile = acceptedFiles[0];\n\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 1920,\n      useWebWorker: true,\n    };\n    try {\n      const compressedFile = await imageCompression(imageFile, options);\n      Object.assign(compressedFile, { path: imageFile.path });\n      setFiles(compressedFile);\n      setFieldValue(\"image\", compressedFile);\n      // setFieldValue(\"name\", compressedFile.name);\n\n      // await console.log(\"await\"); // write your own logic\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  const handleRemoveAll = () => {\n    setFiles([]);\n  };\n  const handleFunction = () => {\n    handleSubmit();\n    handleRemoveAll();\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: handleDrop,\n  });\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        {...getRootProps()}\n      >\n        <input {...getInputProps()} />\n        <Box display=\"flex\" alignItems=\"center\" className={classes.buttonBox}>\n          <Box display=\"flex\">\n            <CameraIcon />\n          </Box>\n\n          <Box flexGrow={1}>{text}</Box>\n        </Box>\n      </Button>\n      {files.name !== undefined && (\n        <>\n          <div>\n            <List className={classes.list}>\n              <ListItem disableGutters>\n                <ListItemIcon>\n                  <FileCopyIcon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={files.name}\n                  primaryTypographyProps={{ variant: \"body1\" }}\n                  secondary={convert(files.size)}\n                />\n              </ListItem>\n              <ListItem disableGutters>\n                <div className={classes.actions}>\n                  <Button onClick={handleRemoveAll} size=\"small\">\n                    Remove\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    size=\"small\"\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={handleFunction}\n                  >\n                    Upload\n                  </Button>\n                </div>\n              </ListItem>\n            </List>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nFilesDropzone.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default FilesDropzone;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Card,\n  FormHelperText,\n  Grid,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport FilesDropzone from \"src/components/FilesDropzone\";\nimport { useSnackbar } from \"notistack\";\nimport { addPhoto } from \"src/PhotosAction\";\nimport { useStateValue } from \"src/StateProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  card: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    [theme.breakpoints.down(\"xs\")]: {\n      flexDirection: \"column\",\n    },\n  },\n  buttonCamera: {\n    width: \"100%\",\n  },\n  cardItem: {\n    width: \"100%\",\n  },\n}));\n\nfunction Uploader({ setImages, images, text }) {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n  const [{}, dispatch] = useStateValue();\n\n  return (\n    <Formik\n      initialValues={{\n        image: null,\n        name: \"\",\n        price: \"\",\n        likes: 1,\n      }}\n      validationSchema={Yup.object().shape({})}\n      onSubmit={async (\n        values,\n        { setErrors, setStatus, setSubmitting, resetForm }\n      ) => {\n        try {\n          const formData = new FormData();\n          formData.append(\"image\", values.image);\n          formData.append(\"name\", values.name);\n          formData.append(\"price\", values.price);\n          formData.append(\"likes\", values.likes);\n\n          addPhoto(dispatch, formData, values);\n\n          resetForm({});\n\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar(\"Image Added\", {\n            variant: \"success\",\n            anchorOrigin: {\n              vertical: \"top\",\n              horizontal: \"right\",\n            },\n          });\n        } catch (err) {\n          setErrors({ submit: err.message });\n          setStatus({ success: false });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values,\n      }) => {\n        console.log(values);\n        return (\n          <form onSubmit={handleSubmit} className={classes.root}>\n            <Grid className={classes.buttonCamera}>\n              <Card className={classes.card}>\n                <Grid\n                  container\n                  display=\"flex\"\n                  spacing={2}\n                  alignItems=\"flex-end\"\n                >\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id=\"name\"\n                      name=\"name\"\n                      label=\"Name\"\n                      type=\"text\"\n                      size=\"small\"\n                      value={values.name}\n                      onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={4}>\n                    <TextField\n                      id=\"price\"\n                      name=\"price\"\n                      label=\"Price\"\n                      type=\"number\"\n                      size=\"small\"\n                      value={values.price}\n                      onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item xs={6} md={3}>\n                    <FilesDropzone\n                      setFieldValue={setFieldValue}\n                      handleSubmit={handleSubmit}\n                      text={text}\n                    />\n                  </Grid>\n                </Grid>\n              </Card>\n            </Grid>\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n          </form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nUploader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Uploader;\n","import React from \"react\";\nimport { Grid, Typography, makeStyles, Box } from \"@material-ui/core\";\nimport Uploader from \"src/components/Uploader\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  box: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    [theme.breakpoints.down(\"sm\")]: {\n      flexDirection: \"column\",\n    },\n  },\n}));\n\nfunction Header() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      justify=\"space-between\"\n      spacing={3}\n    >\n      <Grid item className={classes.box}>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          All Photos\n        </Typography>\n        <Box flexGrow={0.5}>\n          <Uploader text=\"Add photo\" />\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  SvgIcon,\n  TableCell,\n  TableRow,\n  TextField,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Save as SaveIcon, Trash2 as Trash2Icon } from \"react-feather\";\nimport { useStateValue } from \"src/StateProvider\";\nimport { removePhoto, editPhoto } from \"src/PhotosAction\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500,\n  },\n  image: {\n    height: 110,\n    width: \"auto\",\n    objectFit: \"contain\",\n  },\n}));\n\nconst Body = ({ photo }) => {\n  const classes = useStyles();\n  const [{}, dispatch] = useStateValue();\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n\n  useEffect(() => {\n    setName(photo.name);\n    setPrice(photo.price);\n  }, [photo]);\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n  const handlePriceChange = (event) => {\n    setPrice(event.target.value);\n  };\n  const handleDeletePhoto = (id) => {\n    removePhoto(dispatch, id);\n  };\n\n  return (\n    <TableRow hover key={photo.id}>\n      <TableCell>\n        <Typography variant=\"body1\">{photo.id}.</Typography>\n      </TableCell>\n      <TableCell>\n        <img src={photo.image.url} alt={photo.name} className={classes.image} />\n      </TableCell>\n      <TableCell>\n        <TextField\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n        ></TextField>\n      </TableCell>\n      <TableCell>\n        <TextField\n          name=\"price\"\n          value={price}\n          onChange={handlePriceChange}\n        ></TextField>\n      </TableCell>\n      <TableCell>{photo.likes}</TableCell>\n      <TableCell align=\"right\">\n        <IconButton\n          onClick={() =>\n            editPhoto(\n              dispatch,\n              {\n                ...photo,\n                name: name,\n                price: price,\n              },\n              photo.id\n            )\n          }\n          disabled={photo.name !== name || photo.price !== price ? false : true}\n        >\n          <SvgIcon fontSize=\"inherit\">\n            <SaveIcon\n              color={\n                photo.name !== name || photo.price !== price\n                  ? \"#4baf4f \"\n                  : \"gray\"\n              }\n            />\n          </SvgIcon>\n        </IconButton>\n        <IconButton onClick={() => handleDeletePhoto(photo.id)}>\n          <SvgIcon fontSize=\"inherit\">\n            <Trash2Icon color=\"red\" />\n          </SvgIcon>\n        </IconButton>\n      </TableCell>\n      <TableCell>{/*  <EditForm photo={photo} />*/}</TableCell>\n    </TableRow>\n  );\n};\n\nexport default Body;\n","/* eslint-disable max-len */\nimport React, { useState } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Box,\n  Card,\n  InputAdornment,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\n// import getInitials from 'src/utils/getInitials';\nimport { useStateValue } from \"src/StateProvider\";\nimport Body from \"./Body\";\n\nfunction applyFilters(photos, query) {\n  return photos.filter((job) => {\n    let matches = true;\n\n    if (query && !job.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(customers, page, limit) {\n  return customers.slice(page * limit, page * limit + limit);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500,\n  },\n}));\n\nfunction Results() {\n  const classes = useStyles();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState(\"\");\n  const [{ photos }] = useStateValue();\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n  const filteredPhotos = applyFilters(photos, query);\n  const paginatedPhotos = applyPagination(filteredPhotos, page, limit);\n\n  return (\n    <Card className={classes.root}>\n      <Box p={2} minHeight={56} display=\"flex\" alignItems=\"center\">\n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon fontSize=\"small\" color=\"action\">\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            ),\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Search by Name\"\n          value={query}\n        />\n        <Box flexGrow={1} />\n      </Box>\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\"></TableCell>\n                <TableCell>Photo</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Price</TableCell>\n                <TableCell>Likes</TableCell>\n                <TableCell align=\"right\">Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedPhotos.map((photo, i) => {\n                return <Body photo={photo} key={i} />;\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredPhotos.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n}\n\nexport default Results;\n","import React from \"react\";\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\nimport Page from \"src/components/Page\";\nimport Header from \"./Header\";\nimport Results from \"./Results\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100%\",\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n  },\n  container: {\n    padding: 0,\n  },\n}));\n\nfunction PhotosListView() {\n  const classes = useStyles();\n\n  return (\n    <Page className={classes.root} title=\"Photos List\">\n      <Container className={classes.container}>\n        <Header />\n        <Box mt={3}>\n          <Results />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default PhotosListView;\n"],"sourceRoot":""}