{"version":3,"sources":["components/useIsMountedRef.js","managementView/EventsListView/Header.js","managementView/EventsListView/Results.js","managementView/EventsListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","Header","className","rest","classes","Grid","container","spacing","justify","clsx","item","Typography","variant","color","queryField","width","Results","events","today","moment","Date","format","useState","page","setPage","limit","setLimit","query","setQuery","filteredJobs","filter","event","matches","name","toLowerCase","includes","applyFilters","paginatedJobs","slice","applyPagination","Card","Box","p","display","alignItems","TextField","InputProps","startAdornment","InputAdornment","position","SvgIcon","fontSize","onChange","persist","target","value","placeholder","minWidth","Table","TableHead","TableRow","TableCell","padding","TableBody","map","job","hover","id","email","date","pastDate","time","service","subject","message","TablePagination","component","count","length","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","minHeight","paddingTop","paddingBottom","EventsListView","isMountedRef","setEvents","getUsers","useCallback","axios","get","then","response","data","JSON","stringify","Page","title","Container","mt"],"mappings":"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","file":"static/js/7.aacc26a8.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport default function useIsMountedRef() {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { Grid, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      justify=\"space-between\"\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Grid item>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          All Events\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Header;\n","/* eslint-disable max-len */\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {\n  Box,\n  Card,\n  InputAdornment,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\n\nfunction applyFilters(events, query) {\n  return events.filter((event) => {\n    let matches = true;\n\n    if (query && !event.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    return matches;\n  });\n}\n\nfunction applyPagination(events, page, limit) {\n  return events.slice(page * limit, page * limit + limit);\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500,\n  },\n}));\n\nfunction Results({ events }) {\n  const classes = useStyles();\n  const today = moment(new Date()).format(\"MM/DD/YYYY\");\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState(\"\");\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const filteredJobs = applyFilters(events, query);\n  const paginatedJobs = applyPagination(filteredJobs, page, limit);\n\n  return (\n    <Card className={classes.root}>\n      <Box p={2}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon fontSize=\"small\" color=\"action\">\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              ),\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search by Name\"\n            value={query}\n          />\n        </Box>\n      </Box>\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\"></TableCell>\n                <TableCell>Customer</TableCell>\n                <TableCell>Date</TableCell>\n                <TableCell>Time</TableCell>\n                <TableCell>Type of Service</TableCell>\n                <TableCell>Subject</TableCell>\n                <TableCell>Message</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedJobs.map((job) => {\n                return (\n                  <TableRow hover key={job.id}>\n                    <TableCell>\n                      <Typography variant=\"body1\">#{job.id}</Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        <div>\n                          <Typography variant=\"h5\">{job.name}</Typography>\n                          <Typography variant=\"body2\">{job.email}</Typography>\n                        </div>\n                      </Box>\n                    </TableCell>\n                    {today >\n                    moment(job.date, \"dddd MMM Do, YYYY\").format(\n                      \"MM/DD/YYYY\"\n                    ) ? (\n                      <TableCell className={classes.pastDate}>\n                        {job.date}\n                      </TableCell>\n                    ) : (\n                      <TableCell>{job.date}</TableCell>\n                    )}\n                    <TableCell>\n                      {moment(job.time, \"hh:mm:ss\").format(\"hh:mm a\")}\n                    </TableCell>\n                    <TableCell>{job.service}</TableCell>\n                    <TableCell>{job.subject}</TableCell>\n                    <TableCell>{job.message}</TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredJobs.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n}\n\nexport default Results;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Box, Container, makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport Page from \"src/components/Page\";\nimport useIsMountedRef from \"src/components/useIsMountedRef\";\nimport Header from \"./Header\";\nimport Results from \"./Results\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100%\",\n    paddingTop: theme.spacing(5),\n    paddingBottom: theme.spacing(5),\n  },\n  container: {\n    padding: 0,\n  },\n}));\n\nfunction EventsListView() {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [events, setEvents] = useState(null);\n\n  const getUsers = useCallback(() => {\n    axios.get(\"/api/v1/events\").then((response) => {\n      if (isMountedRef.current) {\n        let data = response.data;\n        setEvents(data);\n      }\n    });\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getUsers();\n  }, [getUsers, JSON.stringify(events)]);\n\n  if (!events) {\n    return null;\n  }\n  return (\n    <Page className={classes.root} title=\"Events List\">\n      <Container className={classes.container}>\n        <Header />\n        <Box mt={3}>\n          <Results events={events} />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default EventsListView;\n"],"sourceRoot":""}